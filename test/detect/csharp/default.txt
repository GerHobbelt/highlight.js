using System.IO.Compression;

#pragma warning disable 414, 3021

namespace MyApplication
{
    interface IInterface { }

    [Obsolete("...")]
    class Program : IInterface
    {
        /// <summary>
        /// Main method
        /// </summary>
        /// <param name="args"></param>
        static void Main(string[] args)
        {
            // comment
            /* multi-lines
             * comment
             */
            Console.WriteLine($"Hello {Name}!");

            if (b == true)
            {
              // FIXME
              MyClass mc;
              MyClass mc = new MyClass(myVariable, MyProperty, myVariable.MyProperty);
              IMyInterface mi = MyClass<IMyInterface>.Create(new MyClass("test"));
              MyClass.MyStaticMethod(myVariable, MyProperty, myVariable.MyProperty);
              List<int> li = new List<int>() { 1, 2, 3 };
              MyClass[] amc = new MyClass[] { 1, 2, 3 };

              MyClass mc = mc;
              Myclass mc = mc;

              Type t = typeof(MyClass);
              Type t = typeof(IInterface);
              Type t = typeof(MyClass<int>);
              Type t = typeof(IInterface<int>);
              Type t = typeof(MyClass<IInterface>);

              DateTime d = new DateTime();
              DateTime? d = null;

              var engine = new FileHelperAsyncEngine<DailyValue>();

              Contract.Requires<ArgumentNullException>(argument != null);

              var un_objet = Session["cl√©"] as MaClasse;

              catch (Exception ex)
              {
                  lbStatus.Text = "Error: " + ex.Message;
              }
            }
            else if (b == false)
            {
              var query = from p in entities.Persons
                          select new { First = p.FirstName, Last = p.LastName };
            }
            else
            {
              MyProperty = "value";
              MyMethod(myVariable, MyProperty, myVariable.MyProperty);
            }

            foreach (MyClass<int> mc in mcList)
            {
            }

            foreach (MyClass mc in mcList)
            {
            }

            using (GZipStream s = new GZipStream(fs, CompressionMode.Decompress))
            {
            }
        }

        [DataMember("")]
        private List<int> MyMethod(MaClasse mc, MaClasse<int> mci, IInterface ii, MaClasse<MaClasse> mcmc)
        {
        }

        public void Methode(DateTime date1 = default(DateTime), DateTime? date2 = null)
        {
            if (date1 == default(DateTime)) date1 = new DateTime(...);
            if (date2 == null) date2 = new DateTime(...);
        }

        public static List<int> JustDoIt(int count)
        {
            Console.WriteLine($"Hello {Name}!");
            return new List<int>(new int[] { 1, 2, 3 })
        }
    }
}
