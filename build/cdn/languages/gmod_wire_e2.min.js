hljs.registerLanguage("gmod_wire_e2",function(e){return{alias:["e2","wire_e2","gmod_wire_e2","expression2"],k:"if|0 elseif|0 else|0 for|0 foreach|0 while|0 break|0 continue|0 local|0 switch|0 case|0 default|0 function|0 return|0",c:[{cN:"string",b:/"(\\[\s\S]|(?!")[^\\])*"/},{cN:"ppcommand",b:/#(include|ifdef|ifndef|else|endif)/,r:10},e.C(/#\[/,/]#/),e.HCM,{cN:"directive",v:[{b:/@name[^#\n]*/},{b:/@model.*/},{b:/@(inputs|outputs|persist|autoupdate)/},{b:/@trigger( +(all|none))?/}],r:10},{cN:"constant",b:/\b_[A-Z0-9_]+/,r:0},{cN:"variable",b:/\b[A-Z]\w*/,r:0},{cN:"operator",b:/[\?%^~$]|[\?\s]+:|[-+]{2}|<<|>>|->|[-+*\/!<>=]=?|[&|][&|]?/,r:0},{cN:"symbol",b:/[[\](),:{}\\]+/,r:0},{cN:"type",b:/\b(angle|array|bone|complex|effect|entity|gtable|matrix[24]?|normal|number|quaternion|ranger|string|table|vector[24]?|void|wirelink)(?!\()\b/g,r:0},{cN:"number",v:[{b:/\b0x[A-F0-9]+/},{b:/\b0b[01]+/},{b:/(\b\d+(\.\d*)?|\.\d+)(e[-+]?\d+)?/}],r:0}]}});