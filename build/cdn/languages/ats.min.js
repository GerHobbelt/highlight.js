hljs.registerLanguage("ats",function(e){var t={cN:"number",v:[{b:"\\b(0b[01']+)"},{b:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"},{b:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],r:0},a={cN:"string",v:[{b:'(u8?|U)?L?"',e:'"',i:"\\n",c:[e.BE]},{b:'(u8?|U)?R"',e:'"',c:[e.BE]},{b:"'\\\\?.",e:"'",i:"."}]},i=e.C("\\(\\*","\\*\\)",{c:["self"]}),s={cN:"meta",b:/%{#/,e:/%}/},r={cN:"meta",b:/#\s*[a-z]+\b/,e:/ /,k:{"meta-keyword":"assert define elif elifdef elifndef else endif error if ifdef ifndef include print then undef"}},f={cN:"meta",b:/\$[_a-zA-Z0-9]+\b/,e:/[\s+\.]/,k:{"meta-keyword":"arrpsz arrptrsize delay ldelay effmask effmask_ntm effmask_exn effmask_ref effmask_wrt effmask_all extern extkind  extype extype_struct extval lst lst_t lst_vt list list_t list_vt rec rec_t rec_vt record record_t record_vt tup tup_t tup_vt tuple tuple_t tuple_vt raise showtype myfilename mylocation myfunction"}},l={keyword:"abstype abst0ype abst@ype absprop absview absvtype absviewtype absvt0ype absvt@ype absviewt0ype and as assume begin break case continue classdec datasort datatype dataprop dataview datavtype dataviewtype do dynload else end exception extern extype extval fn fnx fun prfn prfun praxi castfn if ifcase in infix infixl infixr prefix postfix implmnt implement primplmnt primplement lam llam fix let local macdef macrodef nonfix overload of op rec scase sif sortdef sta stacst stadef stavar staload symelim symintr then try tkindef type typedef propdef viewdef vtypedef viewtypedef val prval var prvar when where for while with withtype withprop withview withvtype withviewtype",built_in:"bool char schar uchar float uint lint ulint llint ullint size_t ssize_t sint usint string",literal:"true false nil"},n={cN:"type",b:/:\s*[a-zA-Z0-9_]+/,e:/[\s*,)]/,eE:!0,k:{keyword:":"}};return{aliases:["dats","sats","hats"],k:l,c:[s,r,f,a,t,n,i,e.CLCM,e.CBCM]}});